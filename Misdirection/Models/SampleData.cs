using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Data.Entity;

namespace Misdirection.Models
{
    public class SampleData : DropCreateDatabaseIfModelChanges<MisdirectionEntities>
    {
        protected override void Seed(MisdirectionEntities context)
        {
            var genres = new List<Genre>
            {
                new Genre { Name = "Epic Movies" },
                new Genre { Name = "Spy Movies" },
                new Genre { Name = "Disaster Movies" },
                new Genre { Name = "Superhero Movies" },
                new Genre { Name = "Thriller Movies" },
                new Genre { Name = "Martial Arts Movies" },
                new Genre { Name = "Video Game Movies" },
                new Genre { Name = "Dark Fantasy Movies" },
                new Genre { Name = "Epic Western Movies" },
                new Genre { Name = "Alternative History Movies" }
            };

            var artists = new List<Artist>
            {
                new Artist { Name = "Gremlins"},
                new Artist { Name = "Psycho"},
                new Artist { Name = "Rosemary\'s Baby"},
                new Artist { Name = "Don\'t Look Now"},
                new Artist { Name = "The Wicker Man"},
                new Artist { Name = "The Shining"},
                new Artist { Name = "The Exorcist"},
                new Artist { Name = "Nosferatu (1922)"},
                new Artist { Name = "Let the Right One In"},
                new Artist { Name = "Vampyr"},
                new Artist { Name = "Peeping Tom"},
                new Artist { Name = "The Innocents"},
                new Artist { Name = "Ringu"},
                new Artist { Name = "The Haunting"},
                new Artist { Name = "Texas Chainsaw Massacre"},
                new Artist { Name = "Dead of Night"},
                new Artist { Name = "The Cabinet of Dr Caligari"},
                new Artist { Name = "Halloween"},
                new Artist { Name = "Bride of Frankenstein"},
                new Artist { Name = "Les Diaboliques"},
                new Artist { Name = "Audition"},
                new Artist { Name = "Dracula (1958)"},
                new Artist { Name = "The Blair Witch Project"},
                new Artist { Name = "Evil Dead/Evil Dead II"},
                new Artist { Name = "Carrie"},
                new Artist { Name = "Les Vampires (1915)"},
                new Artist { Name = "2001" },
                new Artist { Name = "Metropolis"},
                new Artist { Name = "Blade Runner"},
                new Artist { Name = "Alien"},
                new Artist { Name = "The Wizard of Oz"},
                new Artist { Name = "ET"},
                new Artist { Name = "Solaris"},
                new Artist { Name = "Spirited Away"},
                new Artist { Name = "Star Wars (1977)"},
                new Artist { Name = "Close Encounters"},
                new Artist { Name = "King Kong"},
                new Artist { Name = "Terminator/ Terminator 2"},
                new Artist { Name = "The Matrix"},
                new Artist { Name = "Alphaville"},
                new Artist { Name = "Back to the Future"},
                new Artist { Name = "Planet of the Apes"},
                new Artist { Name = "Brazil"},
                new Artist { Name = "The Lord of the Rings trilogy"},
                new Artist { Name = "Dark Star"},
                new Artist { Name = "Day the Earth Stood Still"},
                new Artist { Name = "Edward Scissorhands"},
                new Artist { Name = "Akira"},
                new Artist { Name = "Princess Bride"},
                new Artist { Name = "Pan\'s Labyrinth"},
                new Artist { Name = "Starship Troopers"},
                new Artist { Name = "Andrei Rublev"},
                new Artist { Name = "Mulholland Dr"},
                new Artist { Name = "L\'Atalante"},
                new Artist { Name = "Tokyo Story"},
                new Artist { Name = "Citizen Kane"},
                new Artist { Name = "A Clockwork Orange"},
                new Artist { Name = "Days of Heaven"},
                new Artist { Name = "Wild Strawberries"},
                new Artist { Name = "White Ribbon"},
                new Artist { Name = "The Gospel According to St Matthew"},
                new Artist { Name = "Aguirre Wrath of God"},
                new Artist { Name = "Pather Panchali"},
                new Artist { Name = "The Conformist"},
                new Artist { Name = "Death in Venice"},
                new Artist { Name = "The Godfather Parts I and II"},
                new Artist { Name = "The Graduate"},
                new Artist { Name = "There Will Be Blood"},
                new Artist { Name = "Battleship Potemkin"},
                new Artist { Name = "Rules of the Game"},
                new Artist { Name = " Shadows"},
                new Artist { Name = "Distant Voices Still Lives"},
                new Artist { Name = "Passion of Joan of Arc"},
                new Artist { Name = "La Dolce Vita"},
                new Artist { Name = "Breaking the Waves"},
                new Artist { Name = "Spirit of the Beehive"},
                new Artist { Name = "Apocalypse Now"},
                new Artist { Name = "North by Northwest"},
                new Artist { Name = "Once Upon a Time in the West"},
                new Artist { Name = "The Wild Bunch"},
                new Artist { Name = "Deliverance"},
                new Artist { Name = "City of God"},
                new Artist { Name = "Paths of Glory"},
                new Artist { Name = "The Wages of Fear"},
                new Artist { Name = "Crouching Tiger Hidden Dragon"},
                new Artist { Name = "The Thin Red Line"},
                new Artist { Name = "Raiders of the Lost Ark"},
                new Artist { Name = "Bullitt"},
                new Artist { Name = "Ran"},
                new Artist { Name = "Die Hard"},
                new Artist { Name = "The Adventures of Robin Hood"},
                new Artist { Name = "The Searchers"},
                new Artist { Name = "Goldfinger"},
                new Artist { Name = "Full Metal Jacket"},
                new Artist { Name = "Last of the Mohicans"},
                new Artist { Name = "Deer Hunter"},
                new Artist { Name = "Gladiator"},
                new Artist { Name = "Rome Open City"},
                new Artist { Name = "Butch Cassidy"},
                new Artist { Name = "Where Eagles Dare"},
                new Artist { Name = "The Incredibles"},
                new Artist { Name = "Annie Hall"},
                new Artist { Name = "Borat"},
                new Artist { Name = "Some Like it Hot"},
                new Artist { Name = "Team America"},
                new Artist { Name = "Dr Strangelove"},
                new Artist { Name = "The Ladykillers"},
                new Artist { Name = "Duck Soup"},
                new Artist { Name = "Rushmore"},
                new Artist { Name = "Kind Hearts & Coronets"},
                new Artist { Name = "Monty Python\'s Life of Brian"},
                new Artist { Name = "Airplane!"},
                new Artist { Name = "Election"},
                new Artist { Name = "His Girl Friday"},
                new Artist { Name = "The Big Lebowski"},
                new Artist { Name = "This Is Spinal Tap"},
                new Artist { Name = "Bringing Up Baby"},
                new Artist { Name = "There\'s Something About Mary"},
                new Artist { Name = "Dazed and Confused"},
                new Artist { Name = "MASH"},
                new Artist { Name = "Groundhog Day"},
                new Artist { Name = "Clueless"},
                new Artist { Name = "The Great Dictator"},
                new Artist { Name = "Clerks"},
                new Artist { Name = "The Jerk"},
                new Artist { Name = "Shaun of the Dead"},
                new Artist { Name = "Chinatown"},
                new Artist { Name = "Touch of Evil"},
                new Artist { Name = "Vertigo"},
                new Artist { Name = " Badlands"},
                new Artist { Name = "Rashomon"},
                new Artist { Name = "Double Indemnity"},
                new Artist { Name = "Get Carter"},
                new Artist { Name = "Pulp Fiction"},
                new Artist { Name = "Hidden"},
                new Artist { Name = "Goodfellas"},
                new Artist { Name = "The Conversation"},
                new Artist { Name = "Bonnie & Clyde"},
                new Artist { Name = "The Killing"},
                new Artist { Name = "French Connection"},
                new Artist { Name = "The Big Sleep"},
                new Artist { Name = "La Ceremonie"},
                new Artist { Name = "Point Blank"},
                new Artist { Name = "Hard Boiled"},
                new Artist { Name = "Long Good Friday"},
                new Artist { Name = "A Prophet"},
                new Artist { Name = "Heat"},
                new Artist { Name = "Scarface (1983)"},
                new Artist { Name = "Miller\'s Crossing"},
                new Artist { Name = "Postman Always Rings Twice (1942)"},
                new Artist { Name = "Jour Se Leve"},
                new Artist { Name = "Brief Encounter"},
                new Artist { Name = "Casablanca"},
                new Artist { Name = "Before Sunrise"},
                new Artist { Name = "Before Sunset"},
                new Artist { Name = "Breathless"},
                new Artist { Name = "In the Mood for Love"},
                new Artist { Name = "The Apartment"},
                new Artist { Name = "Hannah & Her Sisters"},
                new Artist { Name = "Eternal Sunshine of the Spotless Mind"},
                new Artist { Name = "Room With a View"},
                new Artist { Name = "Jules et Jim"},
                new Artist { Name = "All That Heaven Allows"},
                new Artist { Name = "Gone with the Wind"},
                new Artist { Name = "An Affair to Remember"},
                new Artist { Name = "Umbrellas of Cherbourg"},
                new Artist { Name = "Lost in Translation"},
                new Artist { Name = "Roman Holiday"},
                new Artist { Name = "Wall-E"},
                new Artist { Name = "My Night With Maud"},
                new Artist { Name = "Voyage to Italy"},
                new Artist { Name = "Dr Zhivago"},
                new Artist { Name = "Harold & Maude"},
                new Artist { Name = "When Harry Met Sally"},
                new Artist { Name = "Say Anything...."},
                new Artist { Name = "Fabulous Baker Boys"},
                new Artist { Name = "A Matter of Life & Death"}
            };

            new List<Album>
            {
                 new Album { Title = "1993 Acura Integra", Genre = genres.Single(g => g.Name == "Epic Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Gremlins"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2004 Acura NSX", Genre = genres.Single(g => g.Name == "Spy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Psycho"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1961 AJ Foyt Race Car", Genre = genres.Single(g => g.Name == "Disaster Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Rosemary\'s Baby"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1964 AJ Foyt Race Car", Genre = genres.Single(g => g.Name == "Superhero Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Don\'t Look Now"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1967 AJ Foyt Race Car", Genre = genres.Single(g => g.Name == "Thriller Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Wicker Man"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1977 AJ Foyt Race Car", Genre = genres.Single(g => g.Name == "Martial Arts Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Shining"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1965 Alfa Romeo 2600 SZ", Genre = genres.Single(g => g.Name == "Video Game Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Exorcist"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2008 Alfa Romeo 8C Competizione", Genre = genres.Single(g => g.Name == "Dark Fantasy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Nosferatu (1922)"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2010 Alfa Romeo Giulietta", Genre = genres.Single(g => g.Name == "Epic Western Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Let the Right One In"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1970 AMC Gremlin", Genre = genres.Single(g => g.Name == "Alternative History Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Vampyr"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1975 AMC Pacer", Genre = genres.Single(g => g.Name == "Epic Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Peeping Tom"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1970 AMC Javelin SST Trans Am", Genre = genres.Single(g => g.Name == "Spy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Innocents"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2011 Armet Armored Vehicle Gurkha", Genre = genres.Single(g => g.Name == "Disaster Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Ringu"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2008 Aston Martin Vantage", Genre = genres.Single(g => g.Name == "Superhero Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Haunting"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2003 Bentley Continental GT", Genre = genres.Single(g => g.Name == "Thriller Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Texas Chainsaw Massacre"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2010 Bentley Continental Supersports", Genre = genres.Single(g => g.Name == "Martial Arts Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Dead of Night"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1967 BMW 2000 CS", Genre = genres.Single(g => g.Name == "Video Game Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Cabinet of Dr Caligari"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1954 BMW Isetta 300", Genre = genres.Single(g => g.Name == "Dark Fantasy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Halloween"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1973 BMW 3.0 CSL", Genre = genres.Single(g => g.Name == "Epic Western Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Bride of Frankenstein"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1975 BMW 3.0 CSL", Genre = genres.Single(g => g.Name == "Alternative History Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Les Diaboliques"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1981 BMW M1", Genre = genres.Single(g => g.Name == "Epic Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Audition"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1989 BMW M3", Genre = genres.Single(g => g.Name == "Spy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Dracula (1958)"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1992 BMW M3", Genre = genres.Single(g => g.Name == "Disaster Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Blair Witch Project"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2001 BMW M3", Genre = genres.Single(g => g.Name == "Superhero Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Evil Dead/Evil Dead II"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2008 BMW M3", Genre = genres.Single(g => g.Name == "Thriller Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Carrie"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2008 BMW 335i Coupe", Genre = genres.Single(g => g.Name == "Martial Arts Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Les Vampires (1915)"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2010 BMW 135i", Genre = genres.Single(g => g.Name == "Video Game Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "2001"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2011 BMW 1M Coupe", Genre = genres.Single(g => g.Name == "Dark Fantasy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Metropolis"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2011 BMW X5", Genre = genres.Single(g => g.Name == "Epic Western Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Blade Runner"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2011 BMW Z4", Genre = genres.Single(g => g.Name == "Alternative History Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Alien"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2000 BMW Z8", Genre = genres.Single(g => g.Name == "Epic Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Wizard of Oz"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2012 BMW Vision EfficientDynamics", Genre = genres.Single(g => g.Name == "Spy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "ET"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1956 Buick Centurion Concept", Genre = genres.Single(g => g.Name == "Disaster Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Solaris"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1951 Buick Le Sabre Prototype", Genre = genres.Single(g => g.Name == "Superhero Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Spirited Away"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1971 Buick Riviera", Genre = genres.Single(g => g.Name == "Thriller Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Star Wars (1977)"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1987 Buick GNX", Genre = genres.Single(g => g.Name == "Martial Arts Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Close Encounters"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1953 Cadillac El Dorado", Genre = genres.Single(g => g.Name == "Video Game Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "King Kong"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1959 Cadillac El Dorado", Genre = genres.Single(g => g.Name == "Dark Fantasy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Terminator/ Terminator 2"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2007 Cadillac Escalade", Genre = genres.Single(g => g.Name == "Epic Western Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Matrix"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2011 Cadillac CTS-V Coupe", Genre = genres.Single(g => g.Name == "Alternative History Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Alphaville"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2011 Cadillac CTS-V Coupe World Challenge", Genre = genres.Single(g => g.Name == "Epic Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Back to the Future"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1957 Chevrolet Bel-Air", Genre = genres.Single(g => g.Name == "Spy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Planet of the Apes"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1969 Chevrolet Camaro", Genre = genres.Single(g => g.Name == "Disaster Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Brazil"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1969 Chevrolet Fast FIve Camaro", Genre = genres.Single(g => g.Name == "Superhero Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Lord of the Rings trilogy"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1980 Chevrolet Camaro", Genre = genres.Single(g => g.Name == "Thriller Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Dark Star"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1970 Chevrolet Camaro Z28", Genre = genres.Single(g => g.Name == "Martial Arts Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Day the Earth Stood Still"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1973 Chevrolet F-Bomb Camaro", Genre = genres.Single(g => g.Name == "Video Game Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Edward Scissorhands"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2010 Chevrolet Camaro", Genre = genres.Single(g => g.Name == "Dark Fantasy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Akira"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2010 Chevrolet Camaro Indy 500 Pace Car", Genre = genres.Single(g => g.Name == "Epic Western Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Princess Bride"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2011 Chevrolet Camaro Indy 500 Pace Car", Genre = genres.Single(g => g.Name == "Alternative History Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Pan\'s Labyrinth"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2012 Chevrolet Camaro ZL1", Genre = genres.Single(g => g.Name == "Epic Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Starship Troopers"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1970 Chevrolet Chevelle SS 454", Genre = genres.Single(g => g.Name == "Spy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Andrei Rublev"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1953 Chevrolet Corvette", Genre = genres.Single(g => g.Name == "Disaster Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Mulholland Dr"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1960 Chevrolet Corvette", Genre = genres.Single(g => g.Name == "Superhero Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "L\'Atalante"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1967 Chevrolet Corvette Stingray", Genre = genres.Single(g => g.Name == "Thriller Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Tokyo Story"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1969 Chevrolet Corvette", Genre = genres.Single(g => g.Name == "Martial Arts Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Citizen Kane"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1980 Chevrolet Corvette", Genre = genres.Single(g => g.Name == "Video Game Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "A Clockwork Orange"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2010 Chevrolet Corvette", Genre = genres.Single(g => g.Name == "Dark Fantasy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Days of Heaven"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2010 Chevrolet Corvette Indy Pace Car", Genre = genres.Single(g => g.Name == "Epic Western Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Wild Strawberries"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2010 Chevrolet Corvette ZR1", Genre = genres.Single(g => g.Name == "Alternative History Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "White Ribbon"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2012 Chevrolet Corvette ZR1 Indy 500 Pace Car", Genre = genres.Single(g => g.Name == "Epic Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Gospel According to St Matthew"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1970 Chevrolet El Camino SS 454", Genre = genres.Single(g => g.Name == "Spy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Aguirre Wrath of God"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1964 Chevrolet Impala SS", Genre = genres.Single(g => g.Name == "Disaster Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Pather Panchali"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1959 Chevrolet Impala SS", Genre = genres.Single(g => g.Name == "Superhero Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Conformist"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2000 Chevrolet Monte Carlo The Legendary #3", Genre = genres.Single(g => g.Name == "Thriller Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Death in Venice"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1956 Chevrolet Nomad", Genre = genres.Single(g => g.Name == "Martial Arts Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Godfather Parts I and II"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1968 Chevrolet Nova SS 396", Genre = genres.Single(g => g.Name == "Video Game Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Graduate"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2007 Chevrolet Silverado", Genre = genres.Single(g => g.Name == "Dark Fantasy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "There Will Be Blood"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2012 Chevrolet Sonic", Genre = genres.Single(g => g.Name == "Epic Western Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Battleship Potemkin"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1984 Chevrolet Suburban", Genre = genres.Single(g => g.Name == "Alternative History Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Rules of the Game"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1995 Chevrolet S10", Genre = genres.Single(g => g.Name == "Epic Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == " Shadows"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1934 Chrysler Airflow", Genre = genres.Single(g => g.Name == "Spy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Distant Voices Still Lives"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2011 Chrysler 200 S by Mopar", Genre = genres.Single(g => g.Name == "Disaster Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Passion of Joan of Arc"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2012 Chrysler 300 SRT8", Genre = genres.Single(g => g.Name == "Superhero Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "La Dolce Vita"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1961 Chrysler 300 G", Genre = genres.Single(g => g.Name == "Thriller Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Breaking the Waves"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1970 Datsun 240z", Genre = genres.Single(g => g.Name == "Martial Arts Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Spirit of the Beehive"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1982 DMC DeLorean", Genre = genres.Single(g => g.Name == "Video Game Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Apocalypse Now"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1982 DMC DeLorean Time Machine", Genre = genres.Single(g => g.Name == "Dark Fantasy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "North by Northwest"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1982 DMC DeLorean Mr Fusion Time Machine ", Genre = genres.Single(g => g.Name == "Epic Western Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Once Upon a Time in the West"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2000 Dodge Caravan", Genre = genres.Single(g => g.Name == "Alternative History Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Wild Bunch"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1970 Dodge Coronet HEMI Super Bee", Genre = genres.Single(g => g.Name == "Epic Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Deliverance"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1970 Dodge Challenger R/T", Genre = genres.Single(g => g.Name == "Spy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "City of God"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2008 Dodge Challenger SRT8", Genre = genres.Single(g => g.Name == "Disaster Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Paths of Glory"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2008 Fast Five Challenger SRT8", Genre = genres.Single(g => g.Name == "Superhero Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Wages of Fear"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2011 Dodge Dom's Charger", Genre = genres.Single(g => g.Name == "Thriller Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Crouching Tiger Hidden Dragon"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1969 Dodge Charger III Prototype", Genre = genres.Single(g => g.Name == "Martial Arts Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Thin Red Line"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1969 Dodge Charger R/T Hemi", Genre = genres.Single(g => g.Name == "Video Game Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Raiders of the Lost Ark"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1970 Dodge Charger Matte Black", Genre = genres.Single(g => g.Name == "Dark Fantasy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Bullitt"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1970 Dodge Charger (Doms Charger)", Genre = genres.Single(g => g.Name == "Epic Western Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Ran"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1971 Dodge Charger", Genre = genres.Single(g => g.Name == "Alternative History Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Die Hard"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2011 Dodge Vault Charger", Genre = genres.Single(g => g.Name == "Epic Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Adventures of Robin Hood"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2011 Dodge Charger Police", Genre = genres.Single(g => g.Name == "Spy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Searchers"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2011 Dodge Charger R/T", Genre = genres.Single(g => g.Name == "Disaster Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Goldfinger"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2012 Dodge Charger SRT8", Genre = genres.Single(g => g.Name == "Superhero Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Full Metal Jacket"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1971 Dodge Demon 340", Genre = genres.Single(g => g.Name == "Thriller Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Last of the Mohicans"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1965 Dodge Deora", Genre = genres.Single(g => g.Name == "Martial Arts Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Deer Hunter"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1936 Dodge Pickup", Genre = genres.Single(g => g.Name == "Video Game Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Gladiator"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1936 Dodge Panel Pickup", Genre = genres.Single(g => g.Name == "Dark Fantasy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Rome Open City"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2009 Dodge Ram 1500", Genre = genres.Single(g => g.Name == "Epic Western Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Butch Cassidy"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2010 Dodge Ram 2500 Power Wagon", Genre = genres.Single(g => g.Name == "Alternative History Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Where Eagles Dare"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1946 Dodge Power Wagon", Genre = genres.Single(g => g.Name == "Epic Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Incredibles"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2010 Dodge Viper ACR-X", Genre = genres.Single(g => g.Name == "Spy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Annie Hall"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1996 Dodge Viper GTS Coupe", Genre = genres.Single(g => g.Name == "Disaster Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Borat"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2000 Dodge Viper GTS-R Concept", Genre = genres.Single(g => g.Name == "Superhero Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Some Like it Hot"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1992 Dodge Viper RT/10", Genre = genres.Single(g => g.Name == "Thriller Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Team America"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2006 Dodge Viper SRT10", Genre = genres.Single(g => g.Name == "Martial Arts Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Dr Strangelove"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2013 SRT Viper", Genre = genres.Single(g => g.Name == "Video Game Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Ladykillers"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1977 Ferrari 308 GTS", Genre = genres.Single(g => g.Name == "Dark Fantasy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Duck Soup"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1994 Ferrari 355 Berlinetta", Genre = genres.Single(g => g.Name == "Epic Western Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Rushmore"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1999 Ferrari 360 Modena", Genre = genres.Single(g => g.Name == "Alternative History Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Kind Hearts & Coronets"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2004 Ferrari F430", Genre = genres.Single(g => g.Name == "Epic Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Monty Python\'s Life of Brian"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2006 Ferrari F430 Challenge", Genre = genres.Single(g => g.Name == "Spy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Airplane!"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2009 Ferrari 458 Italia", Genre = genres.Single(g => g.Name == "Disaster Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Election"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2006 Ferrari 599 GTB Fiorano", Genre = genres.Single(g => g.Name == "Superhero Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "His Girl Friday"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2008 Ferrari California", Genre = genres.Single(g => g.Name == "Thriller Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Big Lebowski"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2011 Ferrari FF", Genre = genres.Single(g => g.Name == "Martial Arts Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "This Is Spinal Tap"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1984 Ferrari Testarossa", Genre = genres.Single(g => g.Name == "Video Game Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Bringing Up Baby"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1969 Ferrari Dino 246 GT", Genre = genres.Single(g => g.Name == "Dark Fantasy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "There\'s Something About Mary"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1968 Ferrari 365 GTB/4 Daytona", Genre = genres.Single(g => g.Name == "Epic Western Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Dazed and Confused"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1984 Ferrari 288 GTO", Genre = genres.Single(g => g.Name == "Alternative History Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "MASH"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1957 Ferrari 250 GT California", Genre = genres.Single(g => g.Name == "Epic Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Groundhog Day"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1957 Ferrari 250 Testarossa ", Genre = genres.Single(g => g.Name == "Spy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Clueless"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1967 Ferrari 412P", Genre = genres.Single(g => g.Name == "Disaster Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Great Dictator"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1962 Ferrari 250 GTO", Genre = genres.Single(g => g.Name == "Superhero Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Clerks"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2007 Fiat 500", Genre = genres.Single(g => g.Name == "Thriller Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Jerk"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2011 Fisker Karma", Genre = genres.Single(g => g.Name == "Martial Arts Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Shaun of the Dead"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1986 Ford Aerostar", Genre = genres.Single(g => g.Name == "Video Game Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Chinatown"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2004 Ford Bronco Concept", Genre = genres.Single(g => g.Name == "Dark Fantasy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Touch of Evil"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1932 Ford Deuce Roadster", Genre = genres.Single(g => g.Name == "Epic Western Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Vertigo"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1932 Ford Deuce Highboy", Genre = genres.Single(g => g.Name == "Alternative History Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == " Badlands"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1932 Ford Deuce Tank", Genre = genres.Single(g => g.Name == "Epic Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Rashomon"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1932 Ford Deuce Highboy Convertible", Genre = genres.Single(g => g.Name == "Spy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Double Indemnity"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1932 Ford Deuce Fighter", Genre = genres.Single(g => g.Name == "Disaster Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Get Carter"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2009 Ford Escape", Genre = genres.Single(g => g.Name == "Superhero Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Pulp Fiction"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1950 Ford F1", Genre = genres.Single(g => g.Name == "Thriller Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Hidden"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2008 Ford F-150", Genre = genres.Single(g => g.Name == "Martial Arts Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Goodfellas"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2011 Ford F-150 SVT Raptor", Genre = genres.Single(g => g.Name == "Video Game Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Conversation"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2012 Ford Fiesta", Genre = genres.Single(g => g.Name == "Dark Fantasy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Bonnie & Clyde"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2012 Ford Fiesta WRC", Genre = genres.Single(g => g.Name == "Epic Western Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Killing"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2010 Ford Focus RS500", Genre = genres.Single(g => g.Name == "Alternative History Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "French Connection"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2009 Ford Flex", Genre = genres.Single(g => g.Name == "Epic Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Big Sleep"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2008 Ford Fusion", Genre = genres.Single(g => g.Name == "Spy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "La Ceremonie"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2012 Ford Focus Sedan", Genre = genres.Single(g => g.Name == "Disaster Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Point Blank"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2012 Ford Focus Titanium", Genre = genres.Single(g => g.Name == "Superhero Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Hard Boiled"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1972 Ford Fenix's Gran Torino", Genre = genres.Single(g => g.Name == "Thriller Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Long Good Friday"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1976 Ford Gran Torino", Genre = genres.Single(g => g.Name == "Martial Arts Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "A Prophet"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2006 Ford GT", Genre = genres.Single(g => g.Name == "Video Game Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Heat"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1912 Ford Model T Buggy", Genre = genres.Single(g => g.Name == "Dark Fantasy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Scarface (1983)"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1967 Ford Mustang Fastback", Genre = genres.Single(g => g.Name == "Epic Western Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Miller\'s Crossing"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1967 Ford Sean's Mustang Fastback", Genre = genres.Single(g => g.Name == "Alternative History Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Postman Always Rings Twice (1942)"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1970 Ford Mustang Boss 429", Genre = genres.Single(g => g.Name == "Epic Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Jour Se Leve"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2004 Ford Mustang FR500S", Genre = genres.Single(g => g.Name == "Spy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Brief Encounter"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2005 Ford Mustang GT", Genre = genres.Single(g => g.Name == "Disaster Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Casablanca"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1973 Ford Pinto", Genre = genres.Single(g => g.Name == "Superhero Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Before Sunrise"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1932 Ford Rat Rod", Genre = genres.Single(g => g.Name == "Thriller Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Before Sunset"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1932 Ford Rusty Rat Rod", Genre = genres.Single(g => g.Name == "Martial Arts Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Breathless"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1986 Ford RS200 Evolution", Genre = genres.Single(g => g.Name == "Video Game Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "In the Mood for Love"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1986 Ford RS200 Rally Edition", Genre = genres.Single(g => g.Name == "Dark Fantasy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Apartment"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2011 Ford Shelby GT500", Genre = genres.Single(g => g.Name == "Epic Western Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Hannah & Her Sisters"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2013 Ford Shelby GT500", Genre = genres.Single(g => g.Name == "Alternative History Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Eternal Sunshine of the Spotless Mind"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1993 Ford SVT Cobra", Genre = genres.Single(g => g.Name == "Epic Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Room With a View"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2000 Ford SVT Cobra R", Genre = genres.Single(g => g.Name == "Spy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Jules et Jim"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1953 GM Firebird I", Genre = genres.Single(g => g.Name == "Disaster Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "All That Heaven Allows"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1956 GM Firebird II", Genre = genres.Single(g => g.Name == "Superhero Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Gone with the Wind"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1958 GM Firebird III", Genre = genres.Single(g => g.Name == "Thriller Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "An Affair to Remember"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1991 GMC Syclone", Genre = genres.Single(g => g.Name == "Martial Arts Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Umbrellas of Cherbourg"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2010 Honda Accord", Genre = genres.Single(g => g.Name == "Video Game Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Lost in Translation"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2007 Honda CR-V", Genre = genres.Single(g => g.Name == "Dark Fantasy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Roman Holiday"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1991 Honda CRX", Genre = genres.Single(g => g.Name == "Epic Western Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Wall-E"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1991 Honda CRX Special Edition", Genre = genres.Single(g => g.Name == "Alternative History Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "My Night With Maud"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2011 Honda CR-Z", Genre = genres.Single(g => g.Name == "Epic Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Voyage to Italy"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1995 Honda Civic Hatchback", Genre = genres.Single(g => g.Name == "Spy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Dr Zhivago"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1999 Honda Civic Hatchback", Genre = genres.Single(g => g.Name == "Disaster Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Harold & Maude"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2006 Honda Civic", Genre = genres.Single(g => g.Name == "Superhero Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "When Harry Met Sally"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2009 Honda Fit", Genre = genres.Single(g => g.Name == "Thriller Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Say Anything...."), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2002 Honda NSX Type-R", Genre = genres.Single(g => g.Name == "Martial Arts Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Fabulous Baker Boys"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2009 Honda NSX RR", Genre = genres.Single(g => g.Name == "Video Game Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "A Matter of Life & Death"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2000 Honda S2000", Genre = genres.Single(g => g.Name == "Dark Fantasy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Gremlins"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2000 Honda Johnny's S2000", Genre = genres.Single(g => g.Name == "Epic Western Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Psycho"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2000 Honda Suki's S2000", Genre = genres.Single(g => g.Name == "Alternative History Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Rosemary\'s Baby"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2009 Honda World Challenge Civic", Genre = genres.Single(g => g.Name == "Epic Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Don\'t Look Now"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2006 Hummer H1 Alpha", Genre = genres.Single(g => g.Name == "Spy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Wicker Man"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2008 Hummer H2", Genre = genres.Single(g => g.Name == "Disaster Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Shining"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2013 Hyundai Velostar", Genre = genres.Single(g => g.Name == "Superhero Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Exorcist"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1957 Jaguar D-Type ", Genre = genres.Single(g => g.Name == "Thriller Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Nosferatu (1922)"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1961 Jaguar E-Type Coupe", Genre = genres.Single(g => g.Name == "Martial Arts Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Let the Right One In"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2009 Jaguar XF", Genre = genres.Single(g => g.Name == "Video Game Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Vampyr"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2012 Jaguar XKR-S", Genre = genres.Single(g => g.Name == "Dark Fantasy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Peeping Tom"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2003 Jeep Wrangler", Genre = genres.Single(g => g.Name == "Epic Western Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Innocents"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2012 Jeep Grand Cherokee SRT8", Genre = genres.Single(g => g.Name == "Alternative History Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Ringu"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2012 Jeep Wrangler Unlimited Rubicon", Genre = genres.Single(g => g.Name == "Epic Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Haunting"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2012 Jeep Wrangler Unlimited Polar Edition", Genre = genres.Single(g => g.Name == "Spy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Texas Chainsaw Massacre"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1964 Lamborghini 350GT", Genre = genres.Single(g => g.Name == "Disaster Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Dead of Night"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2012 Lamborghini Aventador LP 700-4", Genre = genres.Single(g => g.Name == "Superhero Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Cabinet of Dr Caligari"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2012 Lamborghini Aventador J", Genre = genres.Single(g => g.Name == "Thriller Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Halloween"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1985 Lamborghini Countach", Genre = genres.Single(g => g.Name == "Martial Arts Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Bride of Frankenstein"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1993 Lamborghini Diablo VT", Genre = genres.Single(g => g.Name == "Video Game Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Les Diaboliques"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1999 Lamborghini Diablo GTR", Genre = genres.Single(g => g.Name == "Dark Fantasy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Audition"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2008 Lamborghini Gallardo LP560-4 Polizia", Genre = genres.Single(g => g.Name == "Epic Western Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Dracula (1958)"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2010 Lamborghini Gallardo LP560-4", Genre = genres.Single(g => g.Name == "Alternative History Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Blair Witch Project"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2011 Lamborghini Gallardo LP570-4 Superleggera", Genre = genres.Single(g => g.Name == "Epic Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Evil Dead/Evil Dead II"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2010 Lamborghini Murcielago     LP 670-4 Superveloce", Genre = genres.Single(g => g.Name == "Spy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Carrie"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1971 Lamborghini Muira SV", Genre = genres.Single(g => g.Name == "Disaster Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Les Vampires (1915)"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1993 Lamborghini LM002", Genre = genres.Single(g => g.Name == "Superhero Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "2001"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2008 Lamborghini Reventon", Genre = genres.Single(g => g.Name == "Thriller Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Metropolis"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2012 Lamborghini Sesto Elemento", Genre = genres.Single(g => g.Name == "Martial Arts Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Blade Runner"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1993 Lancia Delta Integrale Evoluzione 2", Genre = genres.Single(g => g.Name == "Video Game Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Alien"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2009 Lancia Delta", Genre = genres.Single(g => g.Name == "Dark Fantasy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Wizard of Oz"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1974 Lancia Stratos HF", Genre = genres.Single(g => g.Name == "Epic Western Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "ET"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2010 Land Rover Range Rover", Genre = genres.Single(g => g.Name == "Alternative History Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Solaris"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2010 Land Rover Discovery LR4", Genre = genres.Single(g => g.Name == "Epic Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Spirited Away"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2011 Land Rover Defender 110", Genre = genres.Single(g => g.Name == "Spy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Star Wars (1977)"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2012 Land Rover Evoque", Genre = genres.Single(g => g.Name == "Disaster Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Close Encounters"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1955 Lincoln Futura", Genre = genres.Single(g => g.Name == "Superhero Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "King Kong"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1964 Lincoln Continental Convertible", Genre = genres.Single(g => g.Name == "Thriller Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Terminator/ Terminator 2"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2009 Lotus Elise", Genre = genres.Single(g => g.Name == "Martial Arts Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Matrix"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1963 Lotus Elite", Genre = genres.Single(g => g.Name == "Video Game Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Alphaville"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1977 Lotus Esprit", Genre = genres.Single(g => g.Name == "Dark Fantasy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Back to the Future"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1996 Lotus Esprit V8", Genre = genres.Single(g => g.Name == "Epic Western Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Planet of the Apes"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2006 Lotus Exige", Genre = genres.Single(g => g.Name == "Alternative History Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Brazil"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2012 Lotus Exige S", Genre = genres.Single(g => g.Name == "Epic Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Lord of the Rings trilogy"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2012 Lotus Exige R-GT", Genre = genres.Single(g => g.Name == "Spy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Dark Star"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2010 Lotus Evora", Genre = genres.Single(g => g.Name == "Disaster Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Day the Earth Stood Still"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2011 Lotus Evora Enduro", Genre = genres.Single(g => g.Name == "Superhero Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Edward Scissorhands"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2011 Lotus Evora GTE", Genre = genres.Single(g => g.Name == "Thriller Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Akira"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2011 Lotus Type 124", Genre = genres.Single(g => g.Name == "Martial Arts Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Princess Bride"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2004 Mazda 3", Genre = genres.Single(g => g.Name == "Video Game Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Pan\'s Labyrinth"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2008 Mazda Furai", Genre = genres.Single(g => g.Name == "Dark Fantasy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Starship Troopers"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2025 Mazda Kaan", Genre = genres.Single(g => g.Name == "Epic Western Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Andrei Rublev"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2012 Mazda Mazdaspeed3 Race Edition", Genre = genres.Single(g => g.Name == "Alternative History Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Mulholland Dr"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2008 Mazda Miata MX-5", Genre = genres.Single(g => g.Name == "Epic Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "L\'Atalante"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1975 Mazda RX-3", Genre = genres.Single(g => g.Name == "Spy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Tokyo Story"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1975 Mazda RX-3 Race Edition", Genre = genres.Single(g => g.Name == "Disaster Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Citizen Kane"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1998 Mazda Dom's RX-7", Genre = genres.Single(g => g.Name == "Superhero Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "A Clockwork Orange"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1998 Mazda Han's RX-7", Genre = genres.Single(g => g.Name == "Thriller Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Days of Heaven"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1999 Mazda RX-7", Genre = genres.Single(g => g.Name == "Martial Arts Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Wild Strawberries"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2010 Mazda RX-8", Genre = genres.Single(g => g.Name == "Video Game Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "White Ribbon"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1996 McLaren F1", Genre = genres.Single(g => g.Name == "Dark Fantasy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Gospel According to St Matthew"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1996 McLaren F1 LM", Genre = genres.Single(g => g.Name == "Epic Western Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Aguirre Wrath of God"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2012 McLaren MP4-12C", Genre = genres.Single(g => g.Name == "Alternative History Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Pather Panchali"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2012 McLaren MP4-12C GT3", Genre = genres.Single(g => g.Name == "Epic Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Conformist"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2007 Mercedes Benz B Class", Genre = genres.Single(g => g.Name == "Spy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Death in Venice"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2008 Mercedes-Benz SLK Roadster", Genre = genres.Single(g => g.Name == "Disaster Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Godfather Parts I and II"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2004 Mercedes-Benz SLR McLaren", Genre = genres.Single(g => g.Name == "Superhero Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Graduate"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2007 Mercedes Benz McLaren SLR 722 GT", Genre = genres.Single(g => g.Name == "Thriller Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "There Will Be Blood"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1970 Mercury Cougar Eliminator", Genre = genres.Single(g => g.Name == "Martial Arts Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Battleship Potemkin"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2012 Military Hornet", Genre = genres.Single(g => g.Name == "Video Game Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Rules of the Game"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2012 Military Black Mamba", Genre = genres.Single(g => g.Name == "Dark Fantasy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == " Shadows"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2012 Military Bulldog", Genre = genres.Single(g => g.Name == "Epic Western Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Distant Voices Still Lives"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2012 Military Tomahawk", Genre = genres.Single(g => g.Name == "Alternative History Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Passion of Joan of Arc"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2012 Military Sidewinder", Genre = genres.Single(g => g.Name == "Epic Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "La Dolce Vita"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2012 Military Honey Badger", Genre = genres.Single(g => g.Name == "Spy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Breaking the Waves"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2012 Military Wolverine", Genre = genres.Single(g => g.Name == "Disaster Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Spirit of the Beehive"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2012 Military Poseidon", Genre = genres.Single(g => g.Name == "Superhero Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Apocalypse Now"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2012 Military Arctic Viper", Genre = genres.Single(g => g.Name == "Thriller Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "North by Northwest"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2012 Military Raven", Genre = genres.Single(g => g.Name == "Martial Arts Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Once Upon a Time in the West"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2012 Military Arctic Fox", Genre = genres.Single(g => g.Name == "Video Game Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Wild Bunch"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2004 Mini Cooper", Genre = genres.Single(g => g.Name == "Dark Fantasy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Deliverance"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2010 Mini Cooper S John Cooper Works GP", Genre = genres.Single(g => g.Name == "Epic Western Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "City of God"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2010 Mini Cooper S JCW", Genre = genres.Single(g => g.Name == "Alternative History Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Paths of Glory"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2010 Mini Clubman S", Genre = genres.Single(g => g.Name == "Epic Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Wages of Fear"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2011 Mini Countryman S", Genre = genres.Single(g => g.Name == "Spy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Crouching Tiger Hidden Dragon"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1998 Mitsubishi Eclipse GNX", Genre = genres.Single(g => g.Name == "Disaster Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Thin Red Line"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2000 Mistsubishi Roman's Eclipse", Genre = genres.Single(g => g.Name == "Superhero Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Raiders of the Lost Ark"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1998 Mitsubishi Brian's Eclipse", Genre = genres.Single(g => g.Name == "Thriller Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Bullitt"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2003 Mitsubishi Brian's Evolution VII", Genre = genres.Single(g => g.Name == "Martial Arts Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Ran"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2003 Mitsubishi Lancer Evolution VIII", Genre = genres.Single(g => g.Name == "Video Game Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Die Hard"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2003 Mitsubishi Lancer Evolution VIII Rally Edition", Genre = genres.Single(g => g.Name == "Dark Fantasy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Adventures of Robin Hood"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2005 Mitsubishi Sean's Lancer Evolution IX", Genre = genres.Single(g => g.Name == "Epic Western Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Searchers"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2008 Mitsubishi Lancer Evolution X", Genre = genres.Single(g => g.Name == "Alternative History Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Goldfinger"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2008 Mitsubishi Lancer Evolution X Sparco Edition", Genre = genres.Single(g => g.Name == "Epic Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Full Metal Jacket"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2011 Mitsubishi Racing Lancer Dakar Edition", Genre = genres.Single(g => g.Name == "Spy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Last of the Mohicans"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1992 Nissan 240SX Hatchback", Genre = genres.Single(g => g.Name == "Disaster Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Deer Hunter"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1991 Nissan 300Z", Genre = genres.Single(g => g.Name == "Superhero Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Gladiator"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2005 Nissan 350Z", Genre = genres.Single(g => g.Name == "Thriller Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Rome Open City"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2010 Nissan 370Z", Genre = genres.Single(g => g.Name == "Martial Arts Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Butch Cassidy"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2010 Nissan Fast FIve 370Z", Genre = genres.Single(g => g.Name == "Video Game Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Where Eagles Dare"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2009 Nissan Cube", Genre = genres.Single(g => g.Name == "Dark Fantasy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Incredibles"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1969 Nissan Skyline GT-R", Genre = genres.Single(g => g.Name == "Epic Western Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Annie Hall"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1994 Nissan Leon's Skyline GT-R (R33)", Genre = genres.Single(g => g.Name == "Alternative History Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Borat"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1999 Nissan Skyline GT-R (R34)", Genre = genres.Single(g => g.Name == "Epic Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Some Like it Hot"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1999 Nissan Brians Skyline GT-R (R34)", Genre = genres.Single(g => g.Name == "Spy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Team America"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1999 Nissan Slivia", Genre = genres.Single(g => g.Name == "Disaster Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Dr Strangelove"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1999 Nissan Slivia Spec-R", Genre = genres.Single(g => g.Name == "Superhero Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Ladykillers"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2009 Nissan GT-R (R35)", Genre = genres.Single(g => g.Name == "Thriller Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Duck Soup"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2004 Nissan Titan", Genre = genres.Single(g => g.Name == "Martial Arts Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Rushmore"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2008 Nissan Xterra", Genre = genres.Single(g => g.Name == "Video Game Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Kind Hearts & Coronets"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2008 Nissan Versa", Genre = genres.Single(g => g.Name == "Dark Fantasy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Monty Python\'s Life of Brian"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2010 Opel Corsa", Genre = genres.Single(g => g.Name == "Epic Western Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Airplane!"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2008 Pagani Zonda Cinque", Genre = genres.Single(g => g.Name == "Alternative History Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Election"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2011 Pagani Zonda R", Genre = genres.Single(g => g.Name == "Epic Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "His Girl Friday"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2012 Pagani Zonda 760 RS", Genre = genres.Single(g => g.Name == "Spy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Big Lebowski"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2012 Pagani Huayra", Genre = genres.Single(g => g.Name == "Disaster Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "This Is Spinal Tap"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1960 Plymouth XNR Concept", Genre = genres.Single(g => g.Name == "Superhero Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Bringing Up Baby"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1970 Plymouth Hemi Cuda", Genre = genres.Single(g => g.Name == "Thriller Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "There\'s Something About Mary"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1970 Plymouth Road Runner", Genre = genres.Single(g => g.Name == "Martial Arts Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Dazed and Confused"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1970 Plymouth Superbird", Genre = genres.Single(g => g.Name == "Video Game Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "MASH"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1956 Pontiac Club De Mer", Genre = genres.Single(g => g.Name == "Dark Fantasy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Groundhog Day"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1966 Pontiac Bonneville", Genre = genres.Single(g => g.Name == "Epic Western Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Clueless"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1969 Pontiac GTO", Genre = genres.Single(g => g.Name == "Alternative History Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Great Dictator"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1969 Pontiac Firebird Trans Am", Genre = genres.Single(g => g.Name == "Epic Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Clerks"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1970 Pontiac Firebird Trans Am", Genre = genres.Single(g => g.Name == "Spy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Jerk"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1978 Pontiac Firebird Trans Am", Genre = genres.Single(g => g.Name == "Disaster Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Shaun of the Dead"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1982 Pontiac Firebird", Genre = genres.Single(g => g.Name == "Superhero Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Chinatown"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2002 Pontiac Firebird Trans Am", Genre = genres.Single(g => g.Name == "Thriller Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Touch of Evil"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2009 Pontiac G8", Genre = genres.Single(g => g.Name == "Martial Arts Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Vertigo"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2008 Scion tC", Genre = genres.Single(g => g.Name == "Video Game Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == " Badlands"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2004 Scion XB", Genre = genres.Single(g => g.Name == "Dark Fantasy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Rashomon"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2008 Scion xB", Genre = genres.Single(g => g.Name == "Epic Western Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Double Indemnity"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2008 Scion xB Valentines Edition", Genre = genres.Single(g => g.Name == "Alternative History Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Get Carter"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2008 Scion xB Halloween Edition", Genre = genres.Single(g => g.Name == "Epic Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Pulp Fiction"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2010 Scion Release Series xB 7.0 Murasaki Purple", Genre = genres.Single(g => g.Name == "Spy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Hidden"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2011 Scion FR-S Concept", Genre = genres.Single(g => g.Name == "Disaster Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Goodfellas"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2012 Scion FR-S Race Prototype", Genre = genres.Single(g => g.Name == "Superhero Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Conversation"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2012 Scion TC Race Edition", Genre = genres.Single(g => g.Name == "Thriller Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Bonnie & Clyde"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1969 Shelby GT500", Genre = genres.Single(g => g.Name == "Martial Arts Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Killing"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2008 Smart ForTwo", Genre = genres.Single(g => g.Name == "Video Game Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "French Connection"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2008 Subaru Impreza WRX STI", Genre = genres.Single(g => g.Name == "Dark Fantasy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Big Sleep"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2008 Subaru Brian's STI", Genre = genres.Single(g => g.Name == "Epic Western Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "La Ceremonie"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2006 Subaru Impreza WRX STI", Genre = genres.Single(g => g.Name == "Alternative History Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Point Blank"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2011 Subaru STI Sedan", Genre = genres.Single(g => g.Name == "Epic Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Hard Boiled"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2007 Toyota Camry", Genre = genres.Single(g => g.Name == "Spy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Long Good Friday"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1973 Toyota Celica Liftback", Genre = genres.Single(g => g.Name == "Disaster Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "A Prophet"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2000 Toyota Celica", Genre = genres.Single(g => g.Name == "Superhero Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Heat"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1986 Toyota Corolla", Genre = genres.Single(g => g.Name == "Thriller Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Scarface (1983)"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2009 Toyota Corolla XRS", Genre = genres.Single(g => g.Name == "Martial Arts Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Miller\'s Crossing"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1984 Toyota FJ40 Land Cruiser", Genre = genres.Single(g => g.Name == "Video Game Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Postman Always Rings Twice (1942)"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2010 Toyota FJ Cruiser", Genre = genres.Single(g => g.Name == "Dark Fantasy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Jour Se Leve"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1994 Toyota MR2", Genre = genres.Single(g => g.Name == "Epic Western Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Brief Encounter"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2006 Toyota Prius", Genre = genres.Single(g => g.Name == "Alternative History Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Casablanca"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2011 Toyota Prius 3rd Generation", Genre = genres.Single(g => g.Name == "Epic Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Before Sunrise"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2011 Toyota Prius V", Genre = genres.Single(g => g.Name == "Spy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Before Sunset"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2011 Toyota Prius C Concept", Genre = genres.Single(g => g.Name == "Disaster Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Breathless"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2012 Toyota Prius Plug-in Hybrid", Genre = genres.Single(g => g.Name == "Superhero Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "In the Mood for Love"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2009 Toyota RAV 4", Genre = genres.Single(g => g.Name == "Thriller Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "The Apartment"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1998 Toyota Supra", Genre = genres.Single(g => g.Name == "Martial Arts Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Hannah & Her Sisters"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1998 Toyota Brians Supra", Genre = genres.Single(g => g.Name == "Video Game Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Eternal Sunshine of the Spotless Mind"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2007 Toyota Tacoma", Genre = genres.Single(g => g.Name == "Dark Fantasy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Room With a View"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2010 Toyota Tundra", Genre = genres.Single(g => g.Name == "Epic Western Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Jules et Jim"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2008 Toyota Yaris", Genre = genres.Single(g => g.Name == "Alternative History Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "All That Heaven Allows"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1963 Volvo P1800 S Coupe", Genre = genres.Single(g => g.Name == "Epic Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Gone with the Wind"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1993 Volvo 240 DL", Genre = genres.Single(g => g.Name == "Spy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "An Affair to Remember"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2007 Volvo C30", Genre = genres.Single(g => g.Name == "Disaster Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Umbrellas of Cherbourg"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2011 Volvo C30 Polestar Edition", Genre = genres.Single(g => g.Name == "Superhero Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Lost in Translation"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2012 Volvo World Challenge S60", Genre = genres.Single(g => g.Name == "Thriller Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Roman Holiday"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2012 Vorsteiner GTR-S 3", Genre = genres.Single(g => g.Name == "Martial Arts Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Wall-E"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2012 Vorsteiner V-RT Coupe", Genre = genres.Single(g => g.Name == "Video Game Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "My Night With Maud"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1967 VW Beetle", Genre = genres.Single(g => g.Name == "Dark Fantasy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Voyage to Italy"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2006 VW New Beetle", Genre = genres.Single(g => g.Name == "Epic Western Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Dr Zhivago"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1979 VW Bus", Genre = genres.Single(g => g.Name == "Alternative History Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Harold & Maude"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1979 VW Bus Special Edition", Genre = genres.Single(g => g.Name == "Epic Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "When Harry Met Sally"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "2010 VW GTI", Genre = genres.Single(g => g.Name == "Spy Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Say Anything...."), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1970 VW Karmann Ghia", Genre = genres.Single(g => g.Name == "Disaster Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Fabulous Baker Boys"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1977 VW Rabbit", Genre = genres.Single(g => g.Name == "Superhero Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "A Matter of Life & Death"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1980 VW Thing", Genre = genres.Single(g => g.Name == "Thriller Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "When Harry Met Sally"), AlbumArtUrl = "/Content/Images/placeholder.jpg" },
                new Album { Title = "1992 VW Vanagon", Genre = genres.Single(g => g.Name == "Martial Arts Movies"), Price = 8.99M, Artist = artists.Single(a => a.Name == "Say Anything...."), AlbumArtUrl = "/Content/Images/placeholder.jpg" }
            }.ForEach(a => context.Albums.Add(a));
        }
    }
}